import requests
from bs4 import BeautifulSoup
import csv

# Function to fetch product details
def fetch_product_details(url):
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
    }
    response = requests.get(url, headers=headers)

    if response.status_code != 200:
        print("Failed to retrieve the webpage")
        return []

    soup = BeautifulSoup(response.text, 'html.parser')
    products = []

    for item in soup.find_all('div', class_='product-item'): # Example class, update based on actual site
        name = item.find('h2', class_='product-title').text.strip() if item.find('h2', class_='product-title') else 'N/A'
        price = item.find('span', class_='price').text.strip() if item.find('span', class_='price') else 'N/A'
        rating = item.find('span', class_='rating').text.strip() if item.find('span', class_='rating') else 'N/A'
        products.append([name, price, rating])

    return products

# Function to save data to CSV
def save_to_csv(products, filename):
    with open(filename, mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['Name', 'Price', 'Rating'])
        writer.writerows(products)

# Main function
def main():
    url = input("Enter the e-commerce website URL: ")
    filename = 'products.csv'

    print("Fetching product details...")
    products = fetch_product_details(url)

    if products:
        save_to_csv(products, filename)
        print(f"Data saved to {filename}")
    else:
        print("No products found or failed to scrape the data.")

if __name__ == "__main__":
    main()
